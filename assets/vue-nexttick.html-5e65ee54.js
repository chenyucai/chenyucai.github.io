import{_ as t,o as n,c,b as e,d as i}from"./app-5b0f25a8.js";const s={},l=e("h1",{id:"vue的nexttick原理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vue的nexttick原理","aria-hidden":"true"},"#"),i(" vue的nextTick原理")],-1),o=e("p",null,"要理解nextTick的原理，可能先要理解vue时怎么更新视图的，因为nextTick的回调函数要等到视图更新后才会执行。",-1),u=e("p",null,"vue视图更新采用的时候异步的方式进行更新的，每次侦听到数据变化，vue都会开启一个异步队列，往队列里面塞watcher的回调函数。",-1),_=e("p",null,"所以nextTick的本质也是一个异步任务，所以vue视图更新和nextTick的本质上就是js的事件循环。",-1),a=e("ol",null,[e("li",null,"比如this.msg = 'hi'，vue监听到msg变化，然后把msg对应的watcher回调函数函数推入异步队列，"),e("li",null,"vue遇到this.$nextTick调用时，也把nextTick的回调函数变成一个异步任务"),e("li",null,"等watcher回调函数里执行div.innerHtml = 'hi' 之后，就去执行nextTick的回调")],-1),r=[l,o,u,_,a];function h(d,x){return n(),c("div",null,r)}const v=t(s,[["render",h],["__file","vue-nexttick.html.vue"]]);export{v as default};
