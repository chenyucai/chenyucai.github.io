import{_ as e,o as a,c as r,a as t}from"./app-5b0f25a8.js";const c={},d=t('<h1 id="vue3与vue2的重要区别" tabindex="-1"><a class="header-anchor" href="#vue3与vue2的重要区别" aria-hidden="true">#</a> vue3与vue2的重要区别</h1><h2 id="使用更快的原生-proxy-代替-object-defineproperty" tabindex="-1"><a class="header-anchor" href="#使用更快的原生-proxy-代替-object-defineproperty" aria-hidden="true">#</a> 使用更快的原生 Proxy 代替 Object.defineProperty</h2><p>Object.defineProperty无法监听添加或删除对象的属性，无法监听数组长度和下标变化。<br> proxy很好的解决了这些问题</p><h2 id="diff算法优化" tabindex="-1"><a class="header-anchor" href="#diff算法优化" aria-hidden="true">#</a> Diff算法优化</h2><p>在vue2中，虚拟dom是全量比较的。<br> 在vue3中，增加了静态标记PatchFlag。<br> 在创建vnode的时候，会根据vnode的内容是否可以变化，为其添加静态标记PatchFlag。diff的时候，只会比较有PatchFlag的节点。PatchFlag是有类型的，比如一个可变化文本节点，会将其添加PatchFlag枚举值为TEXT的静态标记。这样在diff的时候，只需比对文本内容。需要比对的内容更少了。PatchFlag还有动态class、动态style、动态属性、动态key属性等枚举值。</p>',5),o=[d];function h(i,n){return a(),r("div",null,o)}const s=e(c,[["render",h],["__file","vue3.html.vue"]]);export{s as default};
