import{_ as t,o as h,c as s,a}from"./app-5b0f25a8.js";const e="/images/https-1.png",i={},l=a('<h1 id="https协议" tabindex="-1"><a class="header-anchor" href="#https协议" aria-hidden="true">#</a> HTTPS协议</h1><h2 id="https基本概念" tabindex="-1"><a class="header-anchor" href="#https基本概念" aria-hidden="true">#</a> https基本概念</h2><p>HTTP协议通常承载于TCP协议之上，在HTTP和TCP之间添加一个安全协议层（SSL或TSL），这个时候，就成了我们常说的HTTPS.</p><h2 id="https的主要作用可以分为两种" tabindex="-1"><a class="header-anchor" href="#https的主要作用可以分为两种" aria-hidden="true">#</a> https的主要作用可以分为两种</h2><ul><li>一种是建立一个信息安全通道，来保证数据传输的安全；</li><li>另一种就是确认网站的真实性。</li></ul><h2 id="http和https的区别" tabindex="-1"><a class="header-anchor" href="#http和https的区别" aria-hidden="true">#</a> http和https的区别</h2><ul><li>HTTP 信息是明文传输，HTTPS 则是具有安全性的 ssl 加密传输协议。</li><li>HTTP 和 HTTPS 连接方式完全不同，端口也不一样，前者是 80，后者是 443。</li><li>HTTP 的连接很简单，是无状态的。HTTPS 是由 SSL+HTTP 构建的可进行加密传输、身份认证的网络协议，比 HTTP 安全</li></ul><h2 id="https工作原理-ssl" tabindex="-1"><a class="header-anchor" href="#https工作原理-ssl" aria-hidden="true">#</a> https工作原理（SSL）</h2><p>客户端在使用Https方式与Web服务端通信时，有以下几个步骤</p><ol><li>客户端使用以https的url请求服务端，要求与服务端建立ssl连接</li><li>服务端收到请求信息后，会将网站的证书信息（证书中包含公钥）传送一份给客户端</li><li>客户端收到公钥后，首先自己创建会话密钥，然后利用证书的公钥加密密钥，并传送给服务端</li><li>服务端利用自己证书的密钥解密出会话密钥</li><li>服务端利用会话密钥加密与客户端之前的通信</li></ol><p><img src="'+e+'" alt="1"></p>',11),r=[l];function p(d,n){return h(),s("div",null,r)}const T=t(i,[["render",p],["__file","https.html.vue"]]);export{T as default};
