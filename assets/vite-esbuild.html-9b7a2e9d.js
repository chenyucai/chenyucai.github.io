import{_ as e,o as d,c as o,a as c}from"./app-5b0f25a8.js";const l={},i=c('<h1 id="esbuild的一些缺点" tabindex="-1"><a class="header-anchor" href="#esbuild的一些缺点" aria-hidden="true">#</a> Esbuild的一些缺点</h1><p>Esbuild 作为打包工具速度快，性能好，但也有一些缺点：</p><ul><li>不支持降级到 <code>ES5</code> 的代码。这意味着在低端浏览器代码会跑不起来。</li><li>不支持 <code>const enum</code> 等语法。这意味着单独使用这些语法在 esbuild 中会直接抛错。</li><li>不提供操作打包产物的接口，像 <code>Rollup</code> 中灵活处理打包产物的能力(如renderChunk钩子)在 <code>Esbuild</code> 当中完全没有。</li><li>不支持自定义 <code>Code Splitting</code> 策略。传统的 <code>Webpack</code> 和 <code>Rollup</code> 都提供了自定义拆包策略的 API，而 Esbuild 并未提供，从而降级了拆包优化的灵活性。</li></ul><p>尽管 <code>Esbuild</code> 作为一个社区新兴的明星项目，有如此多的局限性，但依然不妨碍 <code>Vite</code> 在开发阶段使用它成功启动项目并获得极致的性能提升，生产环境处于稳定性考虑当然是采用功能更加丰富、生态更加成熟的<code> Rollup</code> 作为依赖打包工具了。</p>',4),t=[i];function s(u,a){return d(),o("div",null,t)}const r=e(l,[["render",s],["__file","vite-esbuild.html.vue"]]);export{r as default};
