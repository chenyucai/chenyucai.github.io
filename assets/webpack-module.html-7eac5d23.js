import{_ as e,o as l,c,a as o}from"./app-5b0f25a8.js";const a="/images/webpack-module-1.png",n={},u=o('<h1 id="webpack中module、chunk、bundle的区别" tabindex="-1"><a class="header-anchor" href="#webpack中module、chunk、bundle的区别" aria-hidden="true">#</a> webpack中module、chunk、bundle的区别</h1><p>module，chunk 和 bundle 其实就是同一份逻辑代码在不同转换场景下的取了三个名字：</p><ul><li>我们直接写出来的是 module</li><li>webpack 处理时是 chunk</li><li>最后生成浏览器可以直接运行的 bundle。</li></ul><p><img src="'+a+'" alt="1"></p><p>大致理解就是：</p><ol><li>我们手写的一个个文件，无论是CommonJS还是ES Module，它们都是module</li><li>当我们写的module源文件传入webpack进行打包时，webpack会根据文件引用信息生成chunk文件，然后webpack对chunk文件进行操作</li><li>webpack处理好chunk文件后，最后会输出bundle文件，也就是最终产物</li></ol>',6),d=[u];function i(t,p){return l(),c("div",null,d)}const m=e(n,[["render",i],["__file","webpack-module.html.vue"]]);export{m as default};
