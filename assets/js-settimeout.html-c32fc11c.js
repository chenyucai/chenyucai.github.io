import{_ as n,o as s,c as a,a as t}from"./app-5b0f25a8.js";const e={},o=t(`<h1 id="settimeout-func-0-的作用" tabindex="-1"><a class="header-anchor" href="#settimeout-func-0-的作用" aria-hidden="true">#</a> setTimeout(func,0)的作用</h1><h2 id="settimeout-func-0-的机制" tabindex="-1"><a class="header-anchor" href="#settimeout-func-0-的机制" aria-hidden="true">#</a> setTimeout(func,0)的机制</h2><p>这里其实说的就是Event Loop的知识，setTimeout的运行机制其实是将指定的代码移除本次执行，等到下一轮Event Loop的时候，在检查是否到了指定时间。如果到了，就执行相应代码，如果不到，就等到再下一轮Event Loop的时候重新判断。</p><p>setTimeout(func,0)将第二个参数设为0，作用是尽可能早的执行任务，但最早也要等到下一次Event Loop才会执行。</p><h2 id="settimeout-func-0-的应用" tabindex="-1"><a class="header-anchor" href="#settimeout-func-0-的应用" aria-hidden="true">#</a> setTimeout(func,0)的应用</h2><h3 id="调整事件的发生顺序" tabindex="-1"><a class="header-anchor" href="#调整事件的发生顺序" aria-hidden="true">#</a> 调整事件的发生顺序</h3><p>比如某个div元素绑定了click事件，点击的时候冒泡到父元素，子元素的回调函数会优先于父元素触发。如果我们想要先父元素的回调函数先触发，就可以用到setTimeout(f,0)</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;input[type=button]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
​input<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token constant">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token constant">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    
        input<span class="token punctuation">.</span>value <span class="token operator">+=</span><span class="token string">&#39; input&#39;</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>​    
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token constant">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
  input<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token string">&#39; body&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码在点击按钮后，先触发回调函数A，然后触发函数C。在函数A中，setTimeout将函数B推迟到下一轮Loop执行，这样就起到了，先触发父元素的回调函数C的目的了。</p><h3 id="利用settimeout实现伪多线程" tabindex="-1"><a class="header-anchor" href="#利用settimeout实现伪多线程" aria-hidden="true">#</a> 利用setTimeout实现伪多线程</h3><p>我们知道js是单线程的，容易出现阻塞。setTimeout一个很关键的作用就是分片，把复杂耗时的程序分成若干细小的任务放到setTimeout里面执行。</p>`,11),p=[o];function c(i,u){return s(),a("div",null,p)}const r=n(e,[["render",c],["__file","js-settimeout.html.vue"]]);export{r as default};
