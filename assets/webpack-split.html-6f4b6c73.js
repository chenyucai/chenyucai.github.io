import{_ as a,o as n,c as s,a as t}from"./app-5b0f25a8.js";const p={},e=t(`<h1 id="webpack拆包策略实践" tabindex="-1"><a class="header-anchor" href="#webpack拆包策略实践" aria-hidden="true">#</a> webpack拆包策略实践</h1><h2 id="按需加载使用import-xxx" tabindex="-1"><a class="header-anchor" href="#按需加载使用import-xxx" aria-hidden="true">#</a> 按需加载使用import(&#39;xxx&#39;)</h2><p>一般情况下路由都采取懒加载的方式</p><h2 id="单独拆出框架依赖-如react-reactdom-vendor包" tabindex="-1"><a class="header-anchor" href="#单独拆出框架依赖-如react-reactdom-vendor包" aria-hidden="true">#</a> 单独拆出框架依赖(如react+reactDom)vendor包</h2><p>package注意固定依赖版本，然后cdn进行强缓存，这样首次访问后浏览器就会缓存下来，框架包是不会变的，就算业务代码改动也不会变，因为这是第三方依赖。如果这些第三方框架包打进index vendor里，这样业务代码改了index的hash变了，浏览器还要重新加载这部分框架代码。</p><p>设置webpack的externals</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">externals</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">react</span><span class="token operator">:</span> <span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;react-dom&#39;</span><span class="token operator">:</span> <span class="token string">&#39;ReactDOM&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="单独打出runtime包" tabindex="-1"><a class="header-anchor" href="#单独打出runtime包" aria-hidden="true">#</a> 单独打出runtime包</h2><p>runtime用作映射其他chunk文件，结合script-ext-html-webpack-plugin插件可将runtime文件内联进html文件，减少请求。</p><p>html-webpack-plugin模板</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 框架代码单独抽离 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>preact.umd.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- runtime的js代码体积小内联到html，减少请求，其他的通过http请求 --&gt;</span>
&lt;% for (var jsPath of htmlWebpackPlugin.files.js) { %&gt;
    &lt;% if(/runtime~.+\\.js$/.test(jsPath)) { %&gt;
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
            <span class="token operator">&lt;</span><span class="token operator">%=</span> compilation<span class="token punctuation">.</span>assets<span class="token punctuation">[</span>jsPath<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">&gt;</span>
        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    &lt;% } else { %&gt;
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>&lt;%= jsPath %&gt;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    &lt;% } %&gt;
&lt;% } %&gt;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用tree-shaking" tabindex="-1"><a class="header-anchor" href="#使用tree-shaking" aria-hidden="true">#</a> 使用tree shaking</h2><p>注意使用esm模块模式导入包，不然做不了tree shaking</p><h2 id="css单独抽取出来" tabindex="-1"><a class="header-anchor" href="#css单独抽取出来" aria-hidden="true">#</a> css单独抽取出来</h2><p>使用css-extract插件把css单独抽取出来</p>`,15),c=[e];function l(o,i){return n(),s("div",null,c)}const r=a(p,[["render",l],["__file","webpack-split.html.vue"]]);export{r as default};
