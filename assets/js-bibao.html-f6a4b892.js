import{_ as a,o as n,c as s,a as e}from"./app-5b0f25a8.js";const i={},t=e(`<h1 id="js闭包" tabindex="-1"><a class="header-anchor" href="#js闭包" aria-hidden="true">#</a> JS闭包</h1><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念" aria-hidden="true">#</a> 基本概念</h2><p>如果一个函数引用了父级及父级以上的作用域的变量，那么这个函数就是一个闭包函数。</p><p>实现闭包的最常用方法就是函数嵌套，如</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">return</span> <span class="token function">funtion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        a <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="闭包的特点" tabindex="-1"><a class="header-anchor" href="#闭包的特点" aria-hidden="true">#</a> 闭包的特点</h2><ol><li>被闭包函数访问的父级及以上的变量，会一直存在于内存中，不会被JS的垃圾回收机制回收。</li><li>闭包实现了对其他函数内部变量的访问。（函数内部的变量对外是不能访问的，闭包通过这种变通的方法实现了访问）</li></ol><p>JS的垃圾回收机制</p><ul><li>如果一个对象不再被引用，那么这个对象就会被GC回收。</li><li>如果两个对象相互引用，而不再被第三者引用，那么这两个对象都会被回收。</li></ul><h2 id="闭包的应用场景" tabindex="-1"><a class="header-anchor" href="#闭包的应用场景" aria-hidden="true">#</a> 闭包的应用场景</h2><ul><li>封装私有变量</li><li>缓存变量，如节流防抖函数</li><li>模拟块级作用域</li><li>创建模块</li></ul>`,11),l=[t];function o(c,p){return n(),s("div",null,l)}const d=a(i,[["render",o],["__file","js-bibao.html.vue"]]);export{d as default};
